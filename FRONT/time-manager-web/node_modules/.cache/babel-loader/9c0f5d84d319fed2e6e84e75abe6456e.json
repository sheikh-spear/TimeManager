{"remainingRequest":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/babel-loader/lib/index.js!/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/src/mocks/handlers.js","dependencies":[{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/src/mocks/handlers.js","mtime":1603710441686},{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzdCB9IGZyb20gJ21zdyc7CmV4cG9ydCB2YXIgaGFuZGxlcnMgPSBbLy8gSGFuZGxlcyBhIFBPU1QgL2xvZ2luIHJlcXVlc3QKcmVzdC5wb3N0KCcvYXBpL3VzZXJzL3NpZ25faW4nLCBmdW5jdGlvbiAocmVxLCByZXMsIGN0eCkgewogIC8vIFBlcnNpc3QgdXNlcidzIGF1dGhlbnRpY2F0aW9uIGluIHRoZSBzZXNzaW9uCiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2lzLWF1dGhlbnRpY2F0ZWQnLCB0cnVlKTsgLy8gcmV0dXJuIHJlcygKICAvLyAgICAgLy8gUmVzcG9uZCB3aXRoIGEgMjAwIHN0YXR1cyBjb2RlCiAgLy8gICAgIGN0eC5zdGF0dXMoMjAwKSwKICAvLyAgICAgY3R4Lmpzb24oewogIC8vICAgICAgICAgImRhdGEiOiB7CiAgLy8gICAgICAgICAgICAgInVzZXIiOiB7CiAgLy8gICAgICAgICAgICAgICAgICJlbWFpbCI6ICJ1c2VyMUBlbWFpbC5jb20iLAogIC8vICAgICAgICAgICAgICAgICAiaWQiOiAiNjAwZGI0Y2UtOWY3OC00NDk0LWJlNjUtNDA0YmZiYTQ1ZDgyIgogIC8vICAgICAgICAgICAgIH0KICAvLyAgICAgICAgIH0KICAvLyAgICAgfSkKICAvLyApCgogIHJldHVybiByZXMoIC8vIFJlc3BvbmQgd2l0aCBhIDUwMCBzdGF0dXMgY29kZQogIGN0eC5zdGF0dXMoNDAzKSwgY3R4Lmpzb24oewogICAgImVycm9ycyI6IHsKICAgICAgImRldGFpbCI6ICJXcm9uZyBlbWFpbCBvciBwYXNzd29yZCIKICAgIH0KICB9KSk7Cn0pLCAvLyBIYW5kbGVzIGEgR0VUIC91c2VyIHJlcXVlc3QKcmVzdC5nZXQoJy91c2VyJywgbnVsbCldOw=="},{"version":3,"sources":["/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/src/mocks/handlers.js"],"names":["rest","handlers","post","req","res","ctx","localStorage","setItem","status","json","get"],"mappings":"AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,OAAO,IAAMC,QAAQ,GAAG,CACpB;AACAD,IAAI,CAACE,IAAL,CAAU,oBAAV,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAmB;AAC/C;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyC,IAAzC,EAF+C,CAG/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOH,GAAG,EACN;AACAC,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,CAFM,EAGNH,GAAG,CAACI,IAAJ,CAAS;AACL,cAAU;AACN,gBAAU;AADJ;AADL,GAAT,CAHM,CAAV;AASH,CAxBD,CAFoB,EA2BpB;AACAT,IAAI,CAACU,GAAL,CAAS,OAAT,EAAkB,IAAlB,CA5BoB,CAAjB","sourcesContent":["import { rest } from 'msw'\nexport const handlers = [\n    // Handles a POST /login request\n    rest.post('/api/users/sign_in', (req, res, ctx) => {\n        // Persist user's authentication in the session\n        localStorage.setItem('is-authenticated', true);\n        // return res(\n        //     // Respond with a 200 status code\n        //     ctx.status(200),\n        //     ctx.json({\n        //         \"data\": {\n        //             \"user\": {\n        //                 \"email\": \"user1@email.com\",\n        //                 \"id\": \"600db4ce-9f78-4494-be65-404bfba45d82\"\n        //             }\n        //         }\n        //     })\n        // )\n        return res(\n            // Respond with a 500 status code\n            ctx.status(403),\n            ctx.json({\n                \"errors\": {\n                    \"detail\": \"Wrong email or password\"\n                }\n            })\n        )\n    }),\n    // Handles a GET /user request\n    rest.get('/user', null),\n]"]}]}