{"remainingRequest":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/babel-loader/lib/index.js!/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/src/mocks/handlers.js","dependencies":[{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/src/mocks/handlers.js","mtime":1603707305815},{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzdCB9IGZyb20gJ21zdyc7CmV4cG9ydCB2YXIgaGFuZGxlcnMgPSBbLy8gSGFuZGxlcyBhIFBPU1QgL2xvZ2luIHJlcXVlc3QKcmVzdC5wb3N0KCcvbG9naW4nLCBmdW5jdGlvbiAocmVxLCByZXMsIGN0eCkgewogIC8vIFBlcnNpc3QgdXNlcidzIGF1dGhlbnRpY2F0aW9uIGluIHRoZSBzZXNzaW9uCiAgLy8gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnaXMtYXV0aGVudGljYXRlZCcsIHRydWUpCiAgcmV0dXJuIHJlcyggLy8gUmVzcG9uZCB3aXRoIGEgMjAwIHN0YXR1cyBjb2RlCiAgY3R4LnN0YXR1cygyMDApLCBjdHguanNvbih7CiAgICBtZXNzYWdlOiAidXNlciBsb2dnZWQiCiAgfSkpOwp9KSwgLy8gSGFuZGxlcyBhIEdFVCAvdXNlciByZXF1ZXN0CnJlc3QuZ2V0KCcvdXNlcicsIG51bGwpXTs="},{"version":3,"sources":["/Users/younessbennaj/EPITECH/T-POO-700/time-manager-front/src/mocks/handlers.js"],"names":["rest","handlers","post","req","res","ctx","status","json","message","get"],"mappings":"AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,OAAO,IAAMC,QAAQ,GAAG,CACpB;AACAD,IAAI,CAACE,IAAL,CAAU,QAAV,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAmB;AACnC;AACA;AACA,SAAOD,GAAG,EACN;AACAC,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,CAFM,EAGND,GAAG,CAACE,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT,CAHM,CAAV;AAKH,CARD,CAFoB,EAWpB;AACAR,IAAI,CAACS,GAAL,CAAS,OAAT,EAAkB,IAAlB,CAZoB,CAAjB","sourcesContent":["import { rest } from 'msw'\nexport const handlers = [\n    // Handles a POST /login request\n    rest.post('/login', (req, res, ctx) => {\n        // Persist user's authentication in the session\n        // sessionStorage.setItem('is-authenticated', true)\n        return res(\n            // Respond with a 200 status code\n            ctx.status(200),\n            ctx.json({ message: \"user logged\" })\n        )\n    }),\n    // Handles a GET /user request\n    rest.get('/user', null),\n]"]}]}